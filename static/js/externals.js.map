{"version":3,"sources":["modernizr-custom-3.6.0.js","detectizr.js"],"names":[],"mappingsrwfile":"externals.js","sourcesContent":["/*!\r\n * modernizr v3.6.0\r\n * Build https://modernizr.com/download?-touchevents-addtest-setclasses-dontmin\r\n *\r\n * Copyright (c)\r\n *  Faruk Ates\r\n *  Paul Irish\r\n *  Alex Sexton\r\n *  Ryan Seddon\r\n *  Patrick Kettner\r\n *  Stu Cox\r\n *  Richard Herrera\r\n\r\n * MIT License\r\n */\r\n\r\n/*\r\n * Modernizr tests which native CSS3 and HTML5 features are available in the\r\n * current UA and makes the results available to you in two ways: as properties on\r\n * a global `Modernizr` object, and as classes on the `<html>` element. This\r\n * information allows you to progressively enhance your pages with a granular level\r\n * of control over the experience.\r\n*/\r\n\r\n;(function(window, document, undefined){\r\n  var classes = [];\r\n  \r\n\r\n  var tests = [];\r\n  \r\n\r\n  /**\r\n   *\r\n   * ModernizrProto is the constructor for Modernizr\r\n   *\r\n   * @class\r\n   * @access public\r\n   */\r\n\r\n  var ModernizrProto = {\r\n    // The current version, dummy\r\n    _version: '3.6.0',\r\n\r\n    // Any settings that don't work as separate modules\r\n    // can go in here as configuration.\r\n    _config: {\r\n      'classPrefix': '',\r\n      'enableClasses': true,\r\n      'enableJSClass': true,\r\n      'usePrefixes': true\r\n    },\r\n\r\n    // Queue of tests\r\n    _q: [],\r\n\r\n    // Stub these for people who are listening\r\n    on: function(test, cb) {\r\n      // I don't really think people should do this, but we can\r\n      // safe guard it a bit.\r\n      // -- NOTE:: this gets WAY overridden in src/addTest for actual async tests.\r\n      // This is in case people listen to synchronous tests. I would leave it out,\r\n      // but the code to *disallow* sync tests in the real version of this\r\n      // function is actually larger than this.\r\n      var self = this;\r\n      setTimeout(function() {\r\n        cb(self[test]);\r\n      }, 0);\r\n    },\r\n\r\n    addTest: function(name, fn, options) {\r\n      tests.push({name: name, fn: fn, options: options});\r\n    },\r\n\r\n    addAsyncTest: function(fn) {\r\n      tests.push({name: null, fn: fn});\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  // Fake some of Object.create so we can force non test results to be non \"own\" properties.\r\n  var Modernizr = function() {};\r\n  Modernizr.prototype = ModernizrProto;\r\n\r\n  // Leak modernizr globally when you `require` it rather than force it here.\r\n  // Overwrite name so constructor name is nicer :D\r\n  Modernizr = new Modernizr();\r\n\r\n  \r\n\r\n  /**\r\n   * is returns a boolean if the typeof an obj is exactly type.\r\n   *\r\n   * @access private\r\n   * @function is\r\n   * @param {*} obj - A thing we want to check the type of\r\n   * @param {string} type - A string to compare the typeof against\r\n   * @returns {boolean}\r\n   */\r\n\r\n  function is(obj, type) {\r\n    return typeof obj === type;\r\n  }\r\n  ;\r\n\r\n  /**\r\n   * Run through all tests and detect their support in the current UA.\r\n   *\r\n   * @access private\r\n   */\r\n\r\n  function testRunner() {\r\n    var featureNames;\r\n    var feature;\r\n    var aliasIdx;\r\n    var result;\r\n    var nameIdx;\r\n    var featureName;\r\n    var featureNameSplit;\r\n\r\n    for (var featureIdx in tests) {\r\n      if (tests.hasOwnProperty(featureIdx)) {\r\n        featureNames = [];\r\n        feature = tests[featureIdx];\r\n        // run the test, throw the return value into the Modernizr,\r\n        // then based on that boolean, define an appropriate className\r\n        // and push it into an array of classes we'll join later.\r\n        //\r\n        // If there is no name, it's an 'async' test that is run,\r\n        // but not directly added to the object. That should\r\n        // be done with a post-run addTest call.\r\n        if (feature.name) {\r\n          featureNames.push(feature.name.toLowerCase());\r\n\r\n          if (feature.options && feature.options.aliases && feature.options.aliases.length) {\r\n            // Add all the aliases into the names list\r\n            for (aliasIdx = 0; aliasIdx < feature.options.aliases.length; aliasIdx++) {\r\n              featureNames.push(feature.options.aliases[aliasIdx].toLowerCase());\r\n            }\r\n          }\r\n        }\r\n\r\n        // Run the test, or use the raw value if it's not a function\r\n        result = is(feature.fn, 'function') ? feature.fn() : feature.fn;\r\n\r\n\r\n        // Set each of the names on the Modernizr object\r\n        for (nameIdx = 0; nameIdx < featureNames.length; nameIdx++) {\r\n          featureName = featureNames[nameIdx];\r\n          // Support dot properties as sub tests. We don't do checking to make sure\r\n          // that the implied parent tests have been added. You must call them in\r\n          // order (either in the test, or make the parent test a dependency).\r\n          //\r\n          // Cap it to TWO to make the logic simple and because who needs that kind of subtesting\r\n          // hashtag famous last words\r\n          featureNameSplit = featureName.split('.');\r\n\r\n          if (featureNameSplit.length === 1) {\r\n            Modernizr[featureNameSplit[0]] = result;\r\n          } else {\r\n            // cast to a Boolean, if not one already\r\n            if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\r\n              Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\r\n            }\r\n\r\n            Modernizr[featureNameSplit[0]][featureNameSplit[1]] = result;\r\n          }\r\n\r\n          classes.push((result ? '' : 'no-') + featureNameSplit.join('-'));\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ;\r\n\r\n  /**\r\n   * docElement is a convenience wrapper to grab the root element of the document\r\n   *\r\n   * @access private\r\n   * @returns {HTMLElement|SVGElement} The root element of the document\r\n   */\r\n\r\n  var docElement = document.documentElement;\r\n  \r\n\r\n  /**\r\n   * A convenience helper to check if the document we are running in is an SVG document\r\n   *\r\n   * @access private\r\n   * @returns {boolean}\r\n   */\r\n\r\n  var isSVG = docElement.nodeName.toLowerCase() === 'svg';\r\n  \r\n\r\n  /**\r\n   * setClasses takes an array of class names and adds them to the root element\r\n   *\r\n   * @access private\r\n   * @function setClasses\r\n   * @param {string[]} classes - Array of class names\r\n   */\r\n\r\n  // Pass in an and array of class names, e.g.:\r\n  //  ['no-webp', 'borderradius', ...]\r\n  function setClasses(classes) {\r\n    var className = docElement.className;\r\n    var classPrefix = Modernizr._config.classPrefix || '';\r\n\r\n    if (isSVG) {\r\n      className = className.baseVal;\r\n    }\r\n\r\n    // Change `no-js` to `js` (independently of the `enableClasses` option)\r\n    // Handle classPrefix on this too\r\n    if (Modernizr._config.enableJSClass) {\r\n      var reJS = new RegExp('(^|\\\\s)' + classPrefix + 'no-js(\\\\s|$)');\r\n      className = className.replace(reJS, '$1' + classPrefix + 'js$2');\r\n    }\r\n\r\n    if (Modernizr._config.enableClasses) {\r\n      // Add the new classes\r\n      className += ' ' + classPrefix + classes.join(' ' + classPrefix);\r\n      if (isSVG) {\r\n        docElement.className.baseVal = className;\r\n      } else {\r\n        docElement.className = className;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  ;\r\n\r\n  /**\r\n   * hasOwnProp is a shim for hasOwnProperty that is needed for Safari 2.0 support\r\n   *\r\n   * @author kangax\r\n   * @access private\r\n   * @function hasOwnProp\r\n   * @param {object} object - The object to check for a property\r\n   * @param {string} property - The property to check for\r\n   * @returns {boolean}\r\n   */\r\n\r\n  // hasOwnProperty shim by kangax needed for Safari 2.0 support\r\n  var hasOwnProp;\r\n\r\n  (function() {\r\n    var _hasOwnProperty = ({}).hasOwnProperty;\r\n    /* istanbul ignore else */\r\n    /* we have no way of testing IE 5.5 or safari 2,\r\n     * so just assume the else gets hit */\r\n    if (!is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined')) {\r\n      hasOwnProp = function(object, property) {\r\n        return _hasOwnProperty.call(object, property);\r\n      };\r\n    }\r\n    else {\r\n      hasOwnProp = function(object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\r\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\r\n      };\r\n    }\r\n  })();\r\n\r\n  \r\n\r\n\r\n   // _l tracks listeners for async tests, as well as tests that execute after the initial run\r\n  ModernizrProto._l = {};\r\n\r\n  /**\r\n   * Modernizr.on is a way to listen for the completion of async tests. Being\r\n   * asynchronous, they may not finish before your scripts run. As a result you\r\n   * will get a possibly false negative `undefined` value.\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.on\r\n   * @access public\r\n   * @function on\r\n   * @param {string} feature - String name of the feature detect\r\n   * @param {function} cb - Callback function returning a Boolean - true if feature is supported, false if not\r\n   * @example\r\n   *\r\n   * ```js\r\n   * Modernizr.on('flash', function( result ) {\r\n   *   if (result) {\r\n   *    // the browser has flash\r\n   *   } else {\r\n   *     // the browser does not have flash\r\n   *   }\r\n   * });\r\n   * ```\r\n   */\r\n\r\n  ModernizrProto.on = function(feature, cb) {\r\n    // Create the list of listeners if it doesn't exist\r\n    if (!this._l[feature]) {\r\n      this._l[feature] = [];\r\n    }\r\n\r\n    // Push this test on to the listener list\r\n    this._l[feature].push(cb);\r\n\r\n    // If it's already been resolved, trigger it on next tick\r\n    if (Modernizr.hasOwnProperty(feature)) {\r\n      // Next Tick\r\n      setTimeout(function() {\r\n        Modernizr._trigger(feature, Modernizr[feature]);\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * _trigger is the private function used to signal test completion and run any\r\n   * callbacks registered through [Modernizr.on](#modernizr-on)\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr._trigger\r\n   * @access private\r\n   * @function _trigger\r\n   * @param {string} feature - string name of the feature detect\r\n   * @param {function|boolean} [res] - A feature detection function, or the boolean =\r\n   * result of a feature detection function\r\n   */\r\n\r\n  ModernizrProto._trigger = function(feature, res) {\r\n    if (!this._l[feature]) {\r\n      return;\r\n    }\r\n\r\n    var cbs = this._l[feature];\r\n\r\n    // Force async\r\n    setTimeout(function() {\r\n      var i, cb;\r\n      for (i = 0; i < cbs.length; i++) {\r\n        cb = cbs[i];\r\n        cb(res);\r\n      }\r\n    }, 0);\r\n\r\n    // Don't trigger these again\r\n    delete this._l[feature];\r\n  };\r\n\r\n  /**\r\n   * addTest allows you to define your own feature detects that are not currently\r\n   * included in Modernizr (under the covers it's the exact same code Modernizr\r\n   * uses for its own [feature detections](https://github.com/Modernizr/Modernizr/tree/master/feature-detects)). Just like the offical detects, the result\r\n   * will be added onto the Modernizr object, as well as an appropriate className set on\r\n   * the html element when configured to do so\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.addTest\r\n   * @optionName Modernizr.addTest()\r\n   * @optionProp addTest\r\n   * @access public\r\n   * @function addTest\r\n   * @param {string|object} feature - The string name of the feature detect, or an\r\n   * object of feature detect names and test\r\n   * @param {function|boolean} test - Function returning true if feature is supported,\r\n   * false if not. Otherwise a boolean representing the results of a feature detection\r\n   * @example\r\n   *\r\n   * The most common way of creating your own feature detects is by calling\r\n   * `Modernizr.addTest` with a string (preferably just lowercase, without any\r\n   * punctuation), and a function you want executed that will return a boolean result\r\n   *\r\n   * ```js\r\n   * Modernizr.addTest('itsTuesday', function() {\r\n   *  var d = new Date();\r\n   *  return d.getDay() === 2;\r\n   * });\r\n   * ```\r\n   *\r\n   * When the above is run, it will set Modernizr.itstuesday to `true` when it is tuesday,\r\n   * and to `false` every other day of the week. One thing to notice is that the names of\r\n   * feature detect functions are always lowercased when added to the Modernizr object. That\r\n   * means that `Modernizr.itsTuesday` will not exist, but `Modernizr.itstuesday` will.\r\n   *\r\n   *\r\n   *  Since we only look at the returned value from any feature detection function,\r\n   *  you do not need to actually use a function. For simple detections, just passing\r\n   *  in a statement that will return a boolean value works just fine.\r\n   *\r\n   * ```js\r\n   * Modernizr.addTest('hasJquery', 'jQuery' in window);\r\n   * ```\r\n   *\r\n   * Just like before, when the above runs `Modernizr.hasjquery` will be true if\r\n   * jQuery has been included on the page. Not using a function saves a small amount\r\n   * of overhead for the browser, as well as making your code much more readable.\r\n   *\r\n   * Finally, you also have the ability to pass in an object of feature names and\r\n   * their tests. This is handy if you want to add multiple detections in one go.\r\n   * The keys should always be a string, and the value can be either a boolean or\r\n   * function that returns a boolean.\r\n   *\r\n   * ```js\r\n   * var detects = {\r\n   *  'hasjquery': 'jQuery' in window,\r\n   *  'itstuesday': function() {\r\n   *    var d = new Date();\r\n   *    return d.getDay() === 2;\r\n   *  }\r\n   * }\r\n   *\r\n   * Modernizr.addTest(detects);\r\n   * ```\r\n   *\r\n   * There is really no difference between the first methods and this one, it is\r\n   * just a convenience to let you write more readable code.\r\n   */\r\n\r\n  function addTest(feature, test) {\r\n\r\n    if (typeof feature == 'object') {\r\n      for (var key in feature) {\r\n        if (hasOwnProp(feature, key)) {\r\n          addTest(key, feature[ key ]);\r\n        }\r\n      }\r\n    } else {\r\n\r\n      feature = feature.toLowerCase();\r\n      var featureNameSplit = feature.split('.');\r\n      var last = Modernizr[featureNameSplit[0]];\r\n\r\n      // Again, we don't check for parent test existence. Get that right, though.\r\n      if (featureNameSplit.length == 2) {\r\n        last = last[featureNameSplit[1]];\r\n      }\r\n\r\n      if (typeof last != 'undefined') {\r\n        // we're going to quit if you're trying to overwrite an existing test\r\n        // if we were to allow it, we'd do this:\r\n        //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\r\n        //   docElement.className = docElement.className.replace( re, '' );\r\n        // but, no rly, stuff 'em.\r\n        return Modernizr;\r\n      }\r\n\r\n      test = typeof test == 'function' ? test() : test;\r\n\r\n      // Set the value (this is the magic, right here).\r\n      if (featureNameSplit.length == 1) {\r\n        Modernizr[featureNameSplit[0]] = test;\r\n      } else {\r\n        // cast to a Boolean, if not one already\r\n        if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\r\n          Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\r\n        }\r\n\r\n        Modernizr[featureNameSplit[0]][featureNameSplit[1]] = test;\r\n      }\r\n\r\n      // Set a single class (either `feature` or `no-feature`)\r\n      setClasses([(!!test && test != false ? '' : 'no-') + featureNameSplit.join('-')]);\r\n\r\n      // Trigger the event\r\n      Modernizr._trigger(feature, test);\r\n    }\r\n\r\n    return Modernizr; // allow chaining.\r\n  }\r\n\r\n  // After all the tests are run, add self to the Modernizr prototype\r\n  Modernizr._q.push(function() {\r\n    ModernizrProto.addTest = addTest;\r\n  });\r\n\r\n  \r\n\r\n\r\n  /**\r\n   * List of property values to set for css tests. See ticket #21\r\n   * http://git.io/vUGl4\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr._prefixes\r\n   * @optionName Modernizr._prefixes\r\n   * @optionProp prefixes\r\n   * @access public\r\n   * @example\r\n   *\r\n   * Modernizr._prefixes is the internal list of prefixes that we test against\r\n   * inside of things like [prefixed](#modernizr-prefixed) and [prefixedCSS](#-code-modernizr-prefixedcss). It is simply\r\n   * an array of kebab-case vendor prefixes you can use within your code.\r\n   *\r\n   * Some common use cases include\r\n   *\r\n   * Generating all possible prefixed version of a CSS property\r\n   * ```js\r\n   * var rule = Modernizr._prefixes.join('transform: rotate(20deg); ');\r\n   *\r\n   * rule === 'transform: rotate(20deg); webkit-transform: rotate(20deg); moz-transform: rotate(20deg); o-transform: rotate(20deg); ms-transform: rotate(20deg);'\r\n   * ```\r\n   *\r\n   * Generating all possible prefixed version of a CSS value\r\n   * ```js\r\n   * rule = 'display:' +  Modernizr._prefixes.join('flex; display:') + 'flex';\r\n   *\r\n   * rule === 'display:flex; display:-webkit-flex; display:-moz-flex; display:-o-flex; display:-ms-flex; display:flex'\r\n   * ```\r\n   */\r\n\r\n  // we use ['',''] rather than an empty array in order to allow a pattern of .`join()`ing prefixes to test\r\n  // values in feature detects to continue to work\r\n  var prefixes = (ModernizrProto._config.usePrefixes ? ' -webkit- -moz- -o- -ms- '.split(' ') : ['','']);\r\n\r\n  // expose these for the plugin API. Look in the source for how to join() them against your input\r\n  ModernizrProto._prefixes = prefixes;\r\n\r\n  \r\n\r\n  /**\r\n   * createElement is a convenience wrapper around document.createElement. Since we\r\n   * use createElement all over the place, this allows for (slightly) smaller code\r\n   * as well as abstracting away issues with creating elements in contexts other than\r\n   * HTML documents (e.g. SVG documents).\r\n   *\r\n   * @access private\r\n   * @function createElement\r\n   * @returns {HTMLElement|SVGElement} An HTML or SVG element\r\n   */\r\n\r\n  function createElement() {\r\n    if (typeof document.createElement !== 'function') {\r\n      // This is the case in IE7, where the type of createElement is \"object\".\r\n      // For this reason, we cannot call apply() as Object is not a Function.\r\n      return document.createElement(arguments[0]);\r\n    } else if (isSVG) {\r\n      return document.createElementNS.call(document, 'http://www.w3.org/2000/svg', arguments[0]);\r\n    } else {\r\n      return document.createElement.apply(document, arguments);\r\n    }\r\n  }\r\n\r\n  ;\r\n\r\n  /**\r\n   * getBody returns the body of a document, or an element that can stand in for\r\n   * the body if a real body does not exist\r\n   *\r\n   * @access private\r\n   * @function getBody\r\n   * @returns {HTMLElement|SVGElement} Returns the real body of a document, or an\r\n   * artificially created element that stands in for the body\r\n   */\r\n\r\n  function getBody() {\r\n    // After page load injecting a fake body doesn't work so check if body exists\r\n    var body = document.body;\r\n\r\n    if (!body) {\r\n      // Can't use the real body create a fake one.\r\n      body = createElement(isSVG ? 'svg' : 'body');\r\n      body.fake = true;\r\n    }\r\n\r\n    return body;\r\n  }\r\n\r\n  ;\r\n\r\n  /**\r\n   * injectElementWithStyles injects an element with style element and some CSS rules\r\n   *\r\n   * @access private\r\n   * @function injectElementWithStyles\r\n   * @param {string} rule - String representing a css rule\r\n   * @param {function} callback - A function that is used to test the injected element\r\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\r\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\r\n   * @returns {boolean}\r\n   */\r\n\r\n  function injectElementWithStyles(rule, callback, nodes, testnames) {\r\n    var mod = 'modernizr';\r\n    var style;\r\n    var ret;\r\n    var node;\r\n    var docOverflow;\r\n    var div = createElement('div');\r\n    var body = getBody();\r\n\r\n    if (parseInt(nodes, 10)) {\r\n      // In order not to give false positives we create a node for each test\r\n      // This also allows the method to scale for unspecified uses\r\n      while (nodes--) {\r\n        node = createElement('div');\r\n        node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\r\n        div.appendChild(node);\r\n      }\r\n    }\r\n\r\n    style = createElement('style');\r\n    style.type = 'text/css';\r\n    style.id = 's' + mod;\r\n\r\n    // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\r\n    // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\r\n    (!body.fake ? div : body).appendChild(style);\r\n    body.appendChild(div);\r\n\r\n    if (style.styleSheet) {\r\n      style.styleSheet.cssText = rule;\r\n    } else {\r\n      style.appendChild(document.createTextNode(rule));\r\n    }\r\n    div.id = mod;\r\n\r\n    if (body.fake) {\r\n      //avoid crashing IE8, if background image is used\r\n      body.style.background = '';\r\n      //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\r\n      body.style.overflow = 'hidden';\r\n      docOverflow = docElement.style.overflow;\r\n      docElement.style.overflow = 'hidden';\r\n      docElement.appendChild(body);\r\n    }\r\n\r\n    ret = callback(div, rule);\r\n    // If this is done after page load we don't want to remove the body so check if body exists\r\n    if (body.fake) {\r\n      body.parentNode.removeChild(body);\r\n      docElement.style.overflow = docOverflow;\r\n      // Trigger layout so kinetic scrolling isn't disabled in iOS6+\r\n      // eslint-disable-next-line\r\n      docElement.offsetHeight;\r\n    } else {\r\n      div.parentNode.removeChild(div);\r\n    }\r\n\r\n    return !!ret;\r\n\r\n  }\r\n\r\n  ;\r\n\r\n  /**\r\n   * testStyles injects an element with style element and some CSS rules\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.testStyles\r\n   * @optionName Modernizr.testStyles()\r\n   * @optionProp testStyles\r\n   * @access public\r\n   * @function testStyles\r\n   * @param {string} rule - String representing a css rule\r\n   * @param {function} callback - A function that is used to test the injected element\r\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\r\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\r\n   * @returns {boolean}\r\n   * @example\r\n   *\r\n   * `Modernizr.testStyles` takes a CSS rule and injects it onto the current page\r\n   * along with (possibly multiple) DOM elements. This lets you check for features\r\n   * that can not be detected by simply checking the [IDL](https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Interface_development_guide/IDL_interface_rules).\r\n   *\r\n   * ```js\r\n   * Modernizr.testStyles('#modernizr { width: 9px; color: papayawhip; }', function(elem, rule) {\r\n   *   // elem is the first DOM node in the page (by default #modernizr)\r\n   *   // rule is the first argument you supplied - the CSS rule in string form\r\n   *\r\n   *   addTest('widthworks', elem.style.width === '9px')\r\n   * });\r\n   * ```\r\n   *\r\n   * If your test requires multiple nodes, you can include a third argument\r\n   * indicating how many additional div elements to include on the page. The\r\n   * additional nodes are injected as children of the `elem` that is returned as\r\n   * the first argument to the callback.\r\n   *\r\n   * ```js\r\n   * Modernizr.testStyles('#modernizr {width: 1px}; #modernizr2 {width: 2px}', function(elem) {\r\n   *   document.getElementById('modernizr').style.width === '1px'; // true\r\n   *   document.getElementById('modernizr2').style.width === '2px'; // true\r\n   *   elem.firstChild === document.getElementById('modernizr2'); // true\r\n   * }, 1);\r\n   * ```\r\n   *\r\n   * By default, all of the additional elements have an ID of `modernizr[n]`, where\r\n   * `n` is its index (e.g. the first additional, second overall is `#modernizr2`,\r\n   * the second additional is `#modernizr3`, etc.).\r\n   * If you want to have more meaningful IDs for your function, you can provide\r\n   * them as the fourth argument, as an array of strings\r\n   *\r\n   * ```js\r\n   * Modernizr.testStyles('#foo {width: 10px}; #bar {height: 20px}', function(elem) {\r\n   *   elem.firstChild === document.getElementById('foo'); // true\r\n   *   elem.lastChild === document.getElementById('bar'); // true\r\n   * }, 2, ['foo', 'bar']);\r\n   * ```\r\n   *\r\n   */\r\n\r\n  var testStyles = ModernizrProto.testStyles = injectElementWithStyles;\r\n  \r\n/*!\r\n{\r\n  \"name\": \"Touch Events\",\r\n  \"property\": \"touchevents\",\r\n  \"caniuse\" : \"touch\",\r\n  \"tags\": [\"media\", \"attribute\"],\r\n  \"notes\": [{\r\n    \"name\": \"Touch Events spec\",\r\n    \"href\": \"https://www.w3.org/TR/2013/WD-touch-events-20130124/\"\r\n  }],\r\n  \"warnings\": [\r\n    \"Indicates if the browser supports the Touch Events spec, and does not necessarily reflect a touchscreen device\"\r\n  ],\r\n  \"knownBugs\": [\r\n    \"False-positive on some configurations of Nokia N900\",\r\n    \"False-positive on some BlackBerry 6.0 builds – https://github.com/Modernizr/Modernizr/issues/372#issuecomment-3112695\"\r\n  ]\r\n}\r\n!*/\r\n/* DOC\r\nIndicates if the browser supports the W3C Touch Events API.\r\n\r\nThis *does not* necessarily reflect a touchscreen device:\r\n\r\n* Older touchscreen devices only emulate mouse events\r\n* Modern IE touch devices implement the Pointer Events API instead: use `Modernizr.pointerevents` to detect support for that\r\n* Some browsers & OS setups may enable touch APIs when no touchscreen is connected\r\n* Future browsers may implement other event models for touch interactions\r\n\r\nSee this article: [You Can't Detect A Touchscreen](http://www.stucox.com/blog/you-cant-detect-a-touchscreen/).\r\n\r\nIt's recommended to bind both mouse and touch/pointer events simultaneously – see [this HTML5 Rocks tutorial](http://www.html5rocks.com/en/mobile/touchandmouse/).\r\n\r\nThis test will also return `true` for Firefox 4 Multitouch support.\r\n*/\r\n\r\n  // Chrome (desktop) used to lie about its support on this, but that has since been rectified: http://crbug.com/36415\r\n  Modernizr.addTest('touchevents', function() {\r\n    var bool;\r\n    if (('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\r\n      bool = true;\r\n    } else {\r\n      // include the 'heartz' as a way to have a non matching MQ to help terminate the join\r\n      // https://git.io/vznFH\r\n      var query = ['@media (', prefixes.join('touch-enabled),('), 'heartz', ')', '{#modernizr{top:9px;position:absolute}}'].join('');\r\n      testStyles(query, function(node) {\r\n        bool = node.offsetTop === 9;\r\n      });\r\n    }\r\n    return bool;\r\n  });\r\n\r\n\r\n  // Run each test\r\n  testRunner();\r\n\r\n  // Remove the \"no-js\" class if it exists\r\n  setClasses(classes);\r\n\r\n  delete ModernizrProto.addTest;\r\n  delete ModernizrProto.addAsyncTest;\r\n\r\n  // Run the things that are supposed to run after the tests\r\n  for (var i = 0; i < Modernizr._q.length; i++) {\r\n    Modernizr._q[i]();\r\n  }\r\n\r\n  // Leak Modernizr namespace\r\n  window.Modernizr = Modernizr;\r\n\r\n\r\n;\r\n\r\n})(window, document);","/*!\r\n * Detectizr v2.2.0\r\n * http://barisaydinoglu.github.com/Detectizr/\r\n *\r\n * Written by Baris Aydinoglu (http://baris.aydinoglu.info) - Copyright 2012\r\n * Released under the MIT license\r\n *\r\n * Date: 2015-09-28T21:37Z\r\n */\r\nwindow.Detectizr = (function(window, navigator, document, undefined) {\r\n\tvar Detectizr = {},\r\n\t\tModernizr = window.Modernizr,\r\n\t\tdeviceTypes = [\"tv\", \"tablet\", \"mobile\", \"desktop\"],\r\n\t\toptions = {\r\n\t\t\t// option for enabling HTML classes of all features (not only the true features) to be added\r\n\t\t\taddAllFeaturesAsClass: false,\r\n\t\t\t// option for enabling detection of device\r\n\t\t\tdetectDevice: true,\r\n\t\t\t// option for enabling detection of device model\r\n\t\t\tdetectDeviceModel: true,\r\n\t\t\t// option for enabling detection of screen size\r\n\t\t\tdetectScreen: true,\r\n\t\t\t// option for enabling detection of operating system type and version\r\n\t\t\tdetectOS: true,\r\n\t\t\t// option for enabling detection of browser type and version\r\n\t\t\tdetectBrowser: true,\r\n\t\t\t// option for enabling detection of common browser plugins\r\n\t\t\tdetectPlugins: true\r\n\t\t},\r\n\t\tplugins2detect = [{\r\n\t\t\tname: \"adobereader\",\r\n\t\t\tsubstrs: [\"Adobe\", \"Acrobat\"],\r\n\t\t\t// AcroPDF.PDF is used by version 7 and later\r\n\t\t\t// PDF.PdfCtrl is used by version 6 and earlier\r\n\t\t\tprogIds: [\"AcroPDF.PDF\", \"PDF.PDFCtrl.5\"]\r\n\t\t}, {\r\n\t\t\tname: \"flash\",\r\n\t\t\tsubstrs: [\"Shockwave Flash\"],\r\n\t\t\tprogIds: [\"ShockwaveFlash.ShockwaveFlash.1\"]\r\n\t\t}, {\r\n\t\t\tname: \"wmplayer\",\r\n\t\t\tsubstrs: [\"Windows Media\"],\r\n\t\t\tprogIds: [\"wmplayer.ocx\"]\r\n\t\t}, {\r\n\t\t\tname: \"silverlight\",\r\n\t\t\tsubstrs: [\"Silverlight\"],\r\n\t\t\tprogIds: [\"AgControl.AgControl\"]\r\n\t\t}, {\r\n\t\t\tname: \"quicktime\",\r\n\t\t\tsubstrs: [\"QuickTime\"],\r\n\t\t\tprogIds: [\"QuickTime.QuickTime\"]\r\n\t\t}],\r\n\t\trclass = /[\\t\\r\\n]/g,\r\n\t\tdocElement = document.documentElement,\r\n\t\tresizeTimeoutId,\r\n\t\toldOrientation;\r\n\r\n\t// Create Global \"extend\" method, so Detectizr does not need jQuery.extend\r\n\tfunction extend(obj, extObj) {\r\n\t\tvar a, b, i;\r\n\t\tif (arguments.length > 2) {\r\n\t\t\tfor (a = 1, b = arguments.length; a < b; a += 1) {\r\n\t\t\t\textend(obj, arguments[a]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (i in extObj) {\r\n\t\t\t\tif (extObj.hasOwnProperty(i)) {\r\n\t\t\t\t\tobj[i] = extObj[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t// simplified and localized indexOf method as one parameter fixed as useragent\r\n\tfunction is(key) {\r\n\t\treturn Detectizr.browser.userAgent.indexOf(key) > -1;\r\n\t}\r\n\r\n\t// simplified and localized regex test method as one parameter fixed as useragent\r\n\tfunction test(regex) {\r\n\t\treturn regex.test(Detectizr.browser.userAgent);\r\n\t}\r\n\r\n\t// simplified and localized regex exec method as one parameter fixed as useragent\r\n\tfunction exec(regex) {\r\n\t\treturn regex.exec(Detectizr.browser.userAgent);\r\n\t}\r\n\r\n\t// localized string trim method\r\n\tfunction trim(value) {\r\n\t\treturn value.replace(/^\\s+|\\s+$/g, \"\");\r\n\t}\r\n\r\n\t// convert string to camelcase\r\n\tfunction toCamel(string) {\r\n\t\tif (string === null || string === undefined) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\treturn String(string).replace(/((\\s|\\-|\\.)+[a-z0-9])/g, function($1) {\r\n\t\t\treturn $1.toUpperCase().replace(/(\\s|\\-|\\.)/g, \"\");\r\n\t\t});\r\n\t}\r\n\r\n\t// removeClass function inspired from jQuery.removeClass\r\n\tfunction removeClass(element, value) {\r\n\t\tvar class2remove = value || \"\",\r\n\t\t\tcur = element.nodeType === 1 && (element.className ? (\" \" + element.className + \" \").replace(rclass, \" \") : \"\");\r\n\t\tif (cur) {\r\n\t\t\twhile (cur.indexOf(\" \" + class2remove + \" \") >= 0) {\r\n\t\t\t\tcur = cur.replace(\" \" + class2remove + \" \", \" \");\r\n\t\t\t}\r\n\t\t\telement.className = value ? trim(cur) : \"\";\r\n\t\t}\r\n\t}\r\n\r\n\t// add version test to Modernizr\r\n\tfunction addVersionTest(version, major, minor) {\r\n\t\tif (!!version) {\r\n\t\t\tversion = toCamel(version);\r\n\t\t\tif (!!major) {\r\n\t\t\t\tmajor = toCamel(major);\r\n\t\t\t\taddConditionalTest(version + major, true);\r\n\t\t\t\tif (!!minor) {\r\n\t\t\t\t\taddConditionalTest(version + major + \"_\" + minor, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// add test to Modernizr based on a condition\r\n\tfunction addConditionalTest(feature, test) {\r\n\t\tif (!!feature && !!Modernizr) {\r\n\t\t\tif (options.addAllFeaturesAsClass) {\r\n\t\t\t\tModernizr.addTest(feature, test);\r\n\t\t\t} else {\r\n\t\t\t\ttest = typeof test === \"function\" ? test() : test;\r\n\t\t\t\tif (test) {\r\n\t\t\t\t\tModernizr.addTest(feature, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdelete Modernizr[feature];\r\n\t\t\t\t\tremoveClass(docElement, feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// set version based on versionFull\r\n\tfunction setVersion(versionType, versionFull) {\r\n\t\tversionType.version = versionFull;\r\n\t\tvar versionArray = versionFull.split(\".\");\r\n\t\tif (versionArray.length > 0) {\r\n\t\t\tversionArray = versionArray.reverse();\r\n\t\t\tversionType.major = versionArray.pop();\r\n\t\t\tif (versionArray.length > 0) {\r\n\t\t\t\tversionType.minor = versionArray.pop();\r\n\t\t\t\tif (versionArray.length > 0) {\r\n\t\t\t\t\tversionArray = versionArray.reverse();\r\n\t\t\t\t\tversionType.patch = versionArray.join(\".\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tversionType.patch = \"0\";\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tversionType.minor = \"0\";\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tversionType.major = \"0\";\r\n\t\t}\r\n\t}\r\n\r\n\tfunction checkOrientation() {\r\n\t\t//timeout wrapper points with doResizeCode as callback\r\n\t\twindow.clearTimeout(resizeTimeoutId);\r\n\t\tresizeTimeoutId = window.setTimeout(function() {\r\n\t\t\toldOrientation = Detectizr.device.orientation;\r\n\t\t\t//wrapper for height/width check\r\n\t\t\tif (window.innerHeight > window.innerWidth) {\r\n\t\t\t\tDetectizr.device.orientation = \"portrait\";\r\n\t\t\t} else {\r\n\t\t\t\tDetectizr.device.orientation = \"landscape\";\r\n\t\t\t}\r\n\t\t\taddConditionalTest(Detectizr.device.orientation, true);\r\n\t\t\tif (oldOrientation !== Detectizr.device.orientation) {\r\n\t\t\t\taddConditionalTest(oldOrientation, false);\r\n\t\t\t}\r\n\t\t}, 10);\r\n\t}\r\n\r\n\tfunction detectPlugin(substrs) {\r\n\t\tvar plugins = navigator.plugins,\r\n\t\t\tplugin, haystack, pluginFoundText, j, k;\r\n\t\tfor (j = plugins.length - 1; j >= 0; j--) {\r\n\t\t\tplugin = plugins[j];\r\n\t\t\thaystack = plugin.name + plugin.description;\r\n\t\t\tpluginFoundText = 0;\r\n\t\t\tfor (k = substrs.length; k >= 0; k--) {\r\n\t\t\t\tif (haystack.indexOf(substrs[k]) !== -1) {\r\n\t\t\t\t\tpluginFoundText += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pluginFoundText === substrs.length) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction detectObject(progIds) {\r\n\t\tvar j;\r\n\t\tfor (j = progIds.length - 1; j >= 0; j--) {\r\n\t\t\ttry {\r\n\t\t\t\tnew ActiveXObject(progIds[j]);\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// Ignore\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction detect(opt) {\r\n\t\tvar i, j, device, os, browser, plugin2detect, pluginFound;\r\n\r\n\t\toptions = extend({}, options, opt || {});\r\n\r\n\t\t/** Device detection **/\r\n\t\tif (options.detectDevice) {\r\n\t\t\tDetectizr.device = {\r\n\t\t\t\ttype: \"\",\r\n\t\t\t\tmodel: \"\",\r\n\t\t\t\torientation: \"\"\r\n\t\t\t};\r\n\t\t\tdevice = Detectizr.device;\r\n\t\t\tif (test(/googletv|smarttv|smart-tv|internet.tv|netcast|nettv|appletv|boxee|kylo|roku|dlnadoc|roku|pov_tv|hbbtv|ce\\-html/)) {\r\n\t\t\t\t// Check if user agent is a smart tv\r\n\t\t\t\tdevice.type = deviceTypes[0];\r\n\t\t\t\tdevice.model = \"smartTv\";\r\n\t\t\t} else if (test(/xbox|playstation.3|wii/)) {\r\n\t\t\t\t// Check if user agent is a game console\r\n\t\t\t\tdevice.type = deviceTypes[0];\r\n\t\t\t\tdevice.model = \"gameConsole\";\r\n\t\t\t} else if (test(/ip(a|ro)d/)) {\r\n\t\t\t\t// Check if user agent is a iPad\r\n\t\t\t\tdevice.type = deviceTypes[1];\r\n\t\t\t\tdevice.model = \"ipad\";\r\n\t\t\t} else if ((test(/tablet/) && !test(/rx-34/)) || test(/folio/)) {\r\n\t\t\t\t// Check if user agent is a Tablet\r\n\t\t\t\tdevice.type = deviceTypes[1];\r\n\t\t\t\tdevice.model = String(exec(/playbook/) || \"\");\r\n\t\t\t} else if (test(/linux/) && test(/android/) && !test(/fennec|mobi|htc.magic|htcX06ht|nexus.one|sc-02b|fone.945/)) {\r\n\t\t\t\t// Check if user agent is an Android Tablet\r\n\t\t\t\tdevice.type = deviceTypes[1];\r\n\t\t\t\tdevice.model = \"android\";\r\n\t\t\t} else if (test(/kindle/) || (test(/mac.os/) && test(/silk/))) {\r\n\t\t\t\t// Check if user agent is a Kindle or Kindle Fire\r\n\t\t\t\tdevice.type = deviceTypes[1];\r\n\t\t\t\tdevice.model = \"kindle\";\r\n\t\t\t} else if (test(/gt-p10|sc-01c|shw-m180s|sgh-t849|sch-i800|shw-m180l|sph-p100|sgh-i987|zt180|htc(.flyer|\\_flyer)|sprint.atp51|viewpad7|pandigital(sprnova|nova)|ideos.s7|dell.streak.7|advent.vega|a101it|a70bht|mid7015|next2|nook/) || (test(/mb511/) && test(/rutem/))) {\r\n\t\t\t\t// Check if user agent is a pre Android 3.0 Tablet\r\n\t\t\t\tdevice.type = deviceTypes[1];\r\n\t\t\t\tdevice.model = \"android\";\r\n\t\t\t} else if (test(/bb10/)) {\r\n\t\t\t\t// Check if user agent is a BB10 device\r\n\t\t\t\tdevice.type = deviceTypes[1];\r\n\t\t\t\tdevice.model = \"blackberry\";\r\n\t\t\t} else {\r\n\t\t\t\t// Check if user agent is one of common mobile types\r\n\t\t\t\tdevice.model = exec(/iphone|ipod|android|blackberry|opera mini|opera mobi|skyfire|maemo|windows phone|palm|iemobile|symbian|symbianos|fennec|j2me/);\r\n\t\t\t\tif (device.model !== null) {\r\n\t\t\t\t\tdevice.type = deviceTypes[2];\r\n\t\t\t\t\tdevice.model = String(device.model);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdevice.model = \"\";\r\n\t\t\t\t\tif (test(/bolt|fennec|iris|maemo|minimo|mobi|mowser|netfront|novarra|prism|rx-34|skyfire|tear|xv6875|xv6975|google.wireless.transcoder/)) {\r\n\t\t\t\t\t\t// Check if user agent is unique Mobile User Agent\r\n\t\t\t\t\t\tdevice.type = deviceTypes[2];\r\n\t\t\t\t\t} else if (test(/opera/) && test(/windows.nt.5/) && test(/htc|xda|mini|vario|samsung\\-gt\\-i8000|samsung\\-sgh\\-i9/)) {\r\n\t\t\t\t\t\t// Check if user agent is an odd Opera User Agent - http://goo.gl/nK90K\r\n\t\t\t\t\t\tdevice.type = deviceTypes[2];\r\n\t\t\t\t\t} else if ((test(/windows.(nt|xp|me|9)/) && !test(/phone/)) || test(/win(9|.9|nt)/) || test(/\\(windows 8\\)/)) {\r\n\t\t\t\t\t\t// Check if user agent is Windows Desktop, \"(Windows 8)\" Chrome extra exception\r\n\t\t\t\t\t\tdevice.type = deviceTypes[3];\r\n\t\t\t\t\t} else if (test(/macintosh|powerpc/) && !test(/silk/)) {\r\n\t\t\t\t\t\t// Check if agent is Mac Desktop\r\n\t\t\t\t\t\tdevice.type = deviceTypes[3];\r\n\t\t\t\t\t\tdevice.model = \"mac\";\r\n\t\t\t\t\t} else if (test(/linux/) && test(/x11/)) {\r\n\t\t\t\t\t\t// Check if user agent is a Linux Desktop\r\n\t\t\t\t\t\tdevice.type = deviceTypes[3];\r\n\t\t\t\t\t} else if (test(/solaris|sunos|bsd/)) {\r\n\t\t\t\t\t\t// Check if user agent is a Solaris, SunOS, BSD Desktop\r\n\t\t\t\t\t\tdevice.type = deviceTypes[3];\r\n\t\t\t\t\t} else if (test(/cros/)) {\r\n\t\t\t\t\t\t// Check if user agent is a Chromebook\r\n\t\t\t\t\t\tdevice.type = deviceTypes[3];\r\n\t\t\t\t\t} else if (test(/bot|crawler|spider|yahoo|ia_archiver|covario-ids|findlinks|dataparksearch|larbin|mediapartners-google|ng-search|snappy|teoma|jeeves|tineye/) && !test(/mobile/)) {\r\n\t\t\t\t\t\t// Check if user agent is a Desktop BOT/Crawler/Spider\r\n\t\t\t\t\t\tdevice.type = deviceTypes[3];\r\n\t\t\t\t\t\tdevice.model = \"crawler\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Otherwise assume it is a Mobile Device\r\n\t\t\t\t\t\tdevice.type = deviceTypes[2];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (i = 0, j = deviceTypes.length; i < j; i += 1) {\r\n\t\t\t\taddConditionalTest(deviceTypes[i], (device.type === deviceTypes[i]));\r\n\t\t\t}\r\n\t\t\tif (options.detectDeviceModel) {\r\n\t\t\t\taddConditionalTest(toCamel(device.model), true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/** Screen detection **/\r\n\t\tif (options.detectScreen) {\r\n\t\t\tdevice.screen = {};\r\n\t\t\tif (!!Modernizr && !!Modernizr.mq) {\r\n\t\t\t\tif (Modernizr.mq(\"only screen and (max-width: 240px)\")) {\r\n\t\t\t\t\tdevice.screen.size = \"veryVerySmall\";\r\n\t\t\t\t\taddConditionalTest(\"veryVerySmallScreen\", true);\r\n\t\t\t\t} else if (Modernizr.mq(\"only screen and (max-width: 320px)\")) {\r\n\t\t\t\t\tdevice.screen.size = \"verySmall\";\r\n\t\t\t\t\taddConditionalTest(\"verySmallScreen\", true);\r\n\t\t\t\t} else if (Modernizr.mq(\"only screen and (max-width: 480px)\")) {\r\n\t\t\t\t\tdevice.screen.size = \"small\";\r\n\t\t\t\t\taddConditionalTest(\"smallScreen\", true);\r\n\t\t\t\t}\r\n\t\t\t\tif (device.type === deviceTypes[1] || device.type === deviceTypes[2]) {\r\n\t\t\t\t\tif (Modernizr.mq(\"only screen and (-moz-min-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen  and (min-device-pixel-ratio: 1.3), only screen and (min-resolution: 1.3dppx)\")) {\r\n\t\t\t\t\t\tdevice.screen.resolution = \"high\";\r\n\t\t\t\t\t\taddConditionalTest(\"highresolution\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (device.type === deviceTypes[1] || device.type === deviceTypes[2]) {\r\n\t\t\t\twindow.onresize = function(event) {\r\n\t\t\t\t\tcheckOrientation(event);\r\n\t\t\t\t};\r\n\t\t\t\tcheckOrientation();\r\n\t\t\t} else {\r\n\t\t\t\tdevice.orientation = \"landscape\";\r\n\t\t\t\taddConditionalTest(device.orientation, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/** OS detection **/\r\n\t\tif (options.detectOS) {\r\n\t\t\tDetectizr.os = {};\r\n\t\t\tos = Detectizr.os;\r\n\t\t\tif (device.model !== \"\") {\r\n\t\t\t\tif (device.model === \"ipad\" || device.model === \"iphone\" || device.model === \"ipod\") {\r\n\t\t\t\t\tos.name = \"ios\";\r\n\t\t\t\t\tsetVersion(os, (test(/os\\s([\\d_]+)/) ? RegExp.$1 : \"\").replace(/_/g, \".\"));\r\n\t\t\t\t} else if (device.model === \"android\") {\r\n\t\t\t\t\tos.name = \"android\";\r\n\t\t\t\t\tsetVersion(os, (test(/android\\s([\\d\\.]+)/) ? RegExp.$1 : \"\"));\r\n\t\t\t\t} else if (device.model === \"blackberry\") {\r\n\t\t\t\t\tos.name = \"blackberry\";\r\n\t\t\t\t\tsetVersion(os, (test(/version\\/([^\\s]+)/) ? RegExp.$1 : \"\"));\r\n\t\t\t\t} else if (device.model === \"playbook\") {\r\n\t\t\t\t\tos.name = \"blackberry\";\r\n\t\t\t\t\tsetVersion(os, (test(/os ([^\\s]+)/) ? RegExp.$1.replace(\";\", \"\") : \"\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!os.name) {\r\n\t\t\t\tif (is(\"win\") || is(\"16bit\")) {\r\n\t\t\t\t\tos.name = \"windows\";\r\n\t\t\t\t\tif (is(\"windows nt 10\")) {\r\n\t\t\t\t\t\tsetVersion(os, \"10\");\r\n\t\t\t\t\t} else if (is(\"windows nt 6.3\")) {\r\n\t\t\t\t\t\tsetVersion(os, \"8.1\");\r\n\t\t\t\t\t} else if (is(\"windows nt 6.2\") || test(/\\(windows 8\\)/)) { //windows 8 chrome mac fix\r\n\t\t\t\t\t\tsetVersion(os, \"8\");\r\n\t\t\t\t\t} else if (is(\"windows nt 6.1\")) {\r\n\t\t\t\t\t\tsetVersion(os, \"7\");\r\n\t\t\t\t\t} else if (is(\"windows nt 6.0\")) {\r\n\t\t\t\t\t\tsetVersion(os, \"vista\");\r\n\t\t\t\t\t} else if (is(\"windows nt 5.2\") || is(\"windows nt 5.1\") || is(\"windows xp\")) {\r\n\t\t\t\t\t\tsetVersion(os, \"xp\");\r\n\t\t\t\t\t} else if (is(\"windows nt 5.0\") || is(\"windows 2000\")) {\r\n\t\t\t\t\t\tsetVersion(os, \"2k\");\r\n\t\t\t\t\t} else if (is(\"winnt\") || is(\"windows nt\")) {\r\n\t\t\t\t\t\tsetVersion(os, \"nt\");\r\n\t\t\t\t\t} else if (is(\"win98\") || is(\"windows 98\")) {\r\n\t\t\t\t\t\tsetVersion(os, \"98\");\r\n\t\t\t\t\t} else if (is(\"win95\") || is(\"windows 95\")) {\r\n\t\t\t\t\t\tsetVersion(os, \"95\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (is(\"mac\") || is(\"darwin\")) {\r\n\t\t\t\t\tos.name = \"mac os\";\r\n\t\t\t\t\tif (is(\"68k\") || is(\"68000\")) {\r\n\t\t\t\t\t\tsetVersion(os, \"68k\");\r\n\t\t\t\t\t} else if (is(\"ppc\") || is(\"powerpc\")) {\r\n\t\t\t\t\t\tsetVersion(os, \"ppc\");\r\n\t\t\t\t\t} else if (is(\"os x\")) {\r\n\t\t\t\t\t\tsetVersion(os, (test(/os\\sx\\s([\\d_]+)/) ? RegExp.$1 : \"os x\").replace(/_/g, \".\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (is(\"webtv\")) {\r\n\t\t\t\t\tos.name = \"webtv\";\r\n\t\t\t\t} else if (is(\"x11\") || is(\"inux\")) {\r\n\t\t\t\t\tos.name = \"linux\";\r\n\t\t\t\t} else if (is(\"sunos\")) {\r\n\t\t\t\t\tos.name = \"sun\";\r\n\t\t\t\t} else if (is(\"irix\")) {\r\n\t\t\t\t\tos.name = \"irix\";\r\n\t\t\t\t} else if (is(\"freebsd\")) {\r\n\t\t\t\t\tos.name = \"freebsd\";\r\n\t\t\t\t} else if (is(\"bsd\")) {\r\n\t\t\t\t\tos.name = \"bsd\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!!os.name) {\r\n\t\t\t\taddConditionalTest(os.name, true);\r\n\t\t\t\tif (!!os.major) {\r\n\t\t\t\t\taddVersionTest(os.name, os.major);\r\n\t\t\t\t\tif (!!os.minor) {\r\n\t\t\t\t\t\taddVersionTest(os.name, os.major, os.minor);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (test(/\\sx64|\\sx86|\\swin64|\\swow64|\\samd64/)) {\r\n\t\t\t\tos.addressRegisterSize = \"64bit\";\r\n\t\t\t} else {\r\n\t\t\t\tos.addressRegisterSize = \"32bit\";\r\n\t\t\t}\r\n\t\t\taddConditionalTest(os.addressRegisterSize, true);\r\n\t\t}\r\n\r\n\t\t/** Browser detection **/\r\n\t\tif (options.detectBrowser) {\r\n\t\t\tbrowser = Detectizr.browser;\r\n\t\t\tif (!test(/opera|webtv/) && (test(/msie\\s([\\d\\w\\.]+)/) || is(\"trident\"))) {\r\n\t\t\t\tbrowser.engine = \"trident\";\r\n\t\t\t\tbrowser.name = \"ie\";\r\n\t\t\t\tif (!window.addEventListener && document.documentMode && document.documentMode === 7) {\r\n\t\t\t\t\tsetVersion(browser, \"8.compat\");\r\n\t\t\t\t} else if (test(/trident.*rv[ :](\\d+)\\./)) {\r\n\t\t\t\t\tsetVersion(browser, RegExp.$1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetVersion(browser, (test(/trident\\/4\\.0/) ? \"8\" : RegExp.$1));\r\n\t\t\t\t}\r\n\t\t\t} else if (is(\"firefox\")) {\r\n\t\t\t\tbrowser.engine = \"gecko\";\r\n\t\t\t\tbrowser.name = \"firefox\";\r\n\t\t\t\tsetVersion(browser, (test(/firefox\\/([\\d\\w\\.]+)/) ? RegExp.$1 : \"\"));\r\n\t\t\t} else if (is(\"gecko/\")) {\r\n\t\t\t\tbrowser.engine = \"gecko\";\r\n\t\t\t} else if (is(\"opera\")) {\r\n\t\t\t\tbrowser.name = \"opera\";\r\n\t\t\t\tbrowser.engine = \"presto\";\r\n\t\t\t\tsetVersion(browser, (test(/version\\/([\\d\\.]+)/) ? RegExp.$1 : (test(/opera(\\s|\\/)([\\d\\.]+)/) ? RegExp.$2 : \"\")));\r\n\t\t\t} else if (is(\"konqueror\")) {\r\n\t\t\t\tbrowser.name = \"konqueror\";\r\n\t\t\t} else if (is(\"edge\")) {\r\n\t\t\t\tbrowser.engine = \"webkit\";\r\n\t\t\t\tbrowser.name = \"edge\";\r\n\t\t\t\tsetVersion(browser, (test(/edge\\/([\\d\\.]+)/) ? RegExp.$1 : \"\"));\r\n\t\t\t} else if (is(\"chrome\")) {\r\n\t\t\t\tbrowser.engine = \"webkit\";\r\n\t\t\t\tbrowser.name = \"chrome\";\r\n\t\t\t\tsetVersion(browser, (test(/chrome\\/([\\d\\.]+)/) ? RegExp.$1 : \"\"));\r\n\t\t\t} else if (is(\"iron\")) {\r\n\t\t\t\tbrowser.engine = \"webkit\";\r\n\t\t\t\tbrowser.name = \"iron\";\r\n\t\t\t} else if (is(\"crios\")) {\r\n\t\t\t\tbrowser.name = \"chrome\";\r\n\t\t\t\tbrowser.engine = \"webkit\";\r\n\t\t\t\tsetVersion(browser, (test(/crios\\/([\\d\\.]+)/) ? RegExp.$1 : \"\"));\r\n\t\t\t} else if (is(\"applewebkit/\")) {\r\n\t\t\t\tbrowser.name = \"safari\";\r\n\t\t\t\tbrowser.engine = \"webkit\";\r\n\t\t\t\tsetVersion(browser, (test(/version\\/([\\d\\.]+)/) ? RegExp.$1 : \"\"));\r\n\t\t\t} else if (is(\"mozilla/\")) {\r\n\t\t\t\tbrowser.engine = \"gecko\";\r\n\t\t\t}\r\n\t\t\tif (!!browser.name) {\r\n\t\t\t\taddConditionalTest(browser.name, true);\r\n\t\t\t\tif (!!browser.major) {\r\n\t\t\t\t\taddVersionTest(browser.name, browser.major);\r\n\t\t\t\t\tif (!!browser.minor) {\r\n\t\t\t\t\t\taddVersionTest(browser.name, browser.major, browser.minor);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\taddConditionalTest(browser.engine, true);\r\n\r\n\t\t\t// Browser Language\r\n\t\t\tbrowser.language = navigator.userLanguage || navigator.language;\r\n\t\t\taddConditionalTest(browser.language, true);\r\n\t\t}\r\n\r\n\t\t/** Plugin detection **/\r\n\t\tif (options.detectPlugins) {\r\n\t\t\tbrowser.plugins = [];\r\n\t\t\tfor (i = plugins2detect.length - 1; i >= 0; i--) {\r\n\t\t\t\tplugin2detect = plugins2detect[i];\r\n\t\t\t\tpluginFound = false;\r\n\t\t\t\tif (window.ActiveXObject) {\r\n\t\t\t\t\tpluginFound = detectObject(plugin2detect.progIds);\r\n\t\t\t\t} else if (navigator.plugins) {\r\n\t\t\t\t\tpluginFound = detectPlugin(plugin2detect.substrs);\r\n\t\t\t\t}\r\n\t\t\t\tif (pluginFound) {\r\n\t\t\t\t\tbrowser.plugins.push(plugin2detect.name);\r\n\t\t\t\t\taddConditionalTest(plugin2detect.name, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (navigator.javaEnabled()) {\r\n\t\t\t\tbrowser.plugins.push(\"java\");\r\n\t\t\t\taddConditionalTest(\"java\", true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tDetectizr.detect = function(settings) {\r\n\t\treturn detect(settings);\r\n\t};\r\n\tDetectizr.init = function() {\r\n\t\tif (Detectizr !== undefined) {\r\n\t\t\tDetectizr.browser = {\r\n\t\t\t\tuserAgent: (navigator.userAgent || navigator.vendor || window.opera).toLowerCase()\r\n\t\t\t};\r\n\t\t\tDetectizr.detect();\r\n\t\t}\r\n\t};\r\n\tDetectizr.init();\r\n\r\n\treturn Detectizr;\r\n}(this, this.navigator, this.document));\r\n\r\n"]}